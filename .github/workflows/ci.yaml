name: CI
on:
  push:
    tags:
      - v*
    branches:
      - master
      - main
      - sylr
  pull_request:
    branches:
      - master
      - main
      - sylr
permissions:
  contents: read

jobs:
  golangci:
    permissions:
      contents: read  # for actions/checkout to fetch code
      pull-requests: read  # for golangci/golangci-lint-action to fetch pull requests
    name: Linter
    runs-on: ubuntu-latest
    steps:
      - name: Check out source
        uses: actions/checkout@v4
      - name: Setup
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: false
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/.cache/golangci-lint
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
        timeout-minutes: 2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          skip-cache: true

  build:
    name: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: ['1.22']
        store-type:
          -
          - memory
          - file
        fix-version:
          -
          - fix42
          - fix43
          - fix44
          - fix50
          - fix50sp1
          - fix50sp2
    steps:
      - name: Check out source
        uses: actions/checkout@v4
      - name: Setup
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
          cache: false
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/.cache/golangci-lint
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
        timeout-minutes: 2
      - name: Install ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
      - name: Unit  test
        env:
          FIX_TEST: ${{ matrix.fix-version }}
          STORE_TYPE: ${{ matrix.store-type }}
        run: if [ -z $FIX_TEST ] && [ -z $STORE_TYPE ]; then make build-src && make test-ci; fi
      - name: Acceptance test
        env:
          GO111MODULE: on
          FIX_TEST: ${{ matrix.fix-version }}
          STORE_TYPE: ${{ matrix.store-type }}
        run: if [ $FIX_TEST ] && [ $STORE_TYPE ]; then make generate-ci && make build && make $FIX_TEST; fi
